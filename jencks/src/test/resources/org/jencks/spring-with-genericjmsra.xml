<?xml version="1.0" encoding="UTF-8"?>

<!-- START SNIPPET: spring -->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

  <!-- START SNIPPET: tm -->
  <bean id="transactionContextManager" class="org.jencks.factory.TransactionContextManagerFactoryBean"/>
  <bean id="transactionManager" class="org.jencks.factory.GeronimoTransactionManagerFactoryBean"/>
  <bean id="jtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
  	<property name="userTransaction" ref="transactionManager" />
  </bean>
  <!-- END SNIPPET: tm -->

  <!--
  || ActiveMQ Broker
  -->
  <bean id="broker" class="org.activemq.spring.BrokerFactoryBean" singleton="true">
    <property name="config" value="classpath:org/jencks/broker.xml"/>
  </bean>

  <!--
  || Jencks JCA Container
  -->
  <bean id="jmsResourceAdapter" class="com.sun.genericra.GenericJMSRA">
  	<property name="providerIntegrationMode" value="bean"/>
  	<property name="XAConnectionFactoryClassName" value="org.activemq.ActiveMQXAConnectionFactory" />
  	<property name="XATopicConnectionFactoryClassName" value="org.activemq.ActiveMQXAConnectionFactory" />
  	<property name="XAQueueConnectionFactoryClassName" value="org.activemq.ActiveMQXAConnectionFactory" />
  	<property name="queueClassName" value="org.activemq.message.ActiveMQQueue" />
  	<property name="topicClassName" value="org.activemq.message.ActiveMQTopic" />
	<property name="supportsXA" value="true" />
	<property name="connectionFactoryProperties" value="BrokerURL=tcp://localhost:51616" />
  </bean>
  
  <bean id="jencks" class="org.jencks.JCAContainer">

    <property name="bootstrapContext">
      <bean class="org.jencks.factory.BootstrapContextFactoryBean">
        <property name="threadPoolSize" value="25"/>
      </bean>
    </property>

    <!-- the JCA Resource Adapter -->
    <property name="resourceAdapter" ref="jmsResourceAdapter" />

  </bean>


  <!-- START SNIPPET: inbound -->
  <bean id="inboundConnectorA" class="org.jencks.JCAConnector">

	<property name="jcaContainer" ref="jencks" />

    <!-- subscription details -->
    <property name="activationSpec">
      <bean class="com.sun.genericra.inbound.ActivationSpec">
      	<property name="resourceAdapter" ref="jmsResourceAdapter" />
        <property name="destinationProperties" value="PhysicalName=test.spring.inboundConnectorA"/>
        <property name="destinationType" value="javax.jms.Topic"/>
      </bean>
    </property>

    <!-- use XA transactions -->
    <property name="transactionManager" ref="transactionManager"/>

    <property name="ref" value="echoBean"/>
  </bean>
  <!-- END SNIPPET: inbound -->

  <!--
    || an inbound message connector using a stateful, pooled  MessageListener
    -->
  <bean id="inboundConnectorB" class="org.jencks.JCAConnector">

	<property name="jcaContainer" ref="jencks" />

    <!-- subscription details -->
    <property name="activationSpec">
      <bean class="com.sun.genericra.inbound.ActivationSpec">
      	<property name="resourceAdapter" ref="jmsResourceAdapter" />
        <property name="destinationProperties" value="PhysicalName=test.spring.inboundConnectorB"/>
        <property name="destinationType" value="javax.jms.Queue"/>
      </bean>
    </property>

    <!-- use XA transactions -->
    <property name="transactionManager" ref="transactionManager"/>

    <!-- This example uses a pooled bean -->
    <property name="ref" value="pooledEchoBean"/>
  </bean>

  <!--
    || Message Driven POJOs
    -->

  <!-- a thread safe non-pooled MessageListener -->
  <bean id="echoBean" class="org.jencks.TestBean" singleton="true">
  </bean>

  <!-- a pooled, non-thread safe MessageListener using ProxyFactoryBean -->
  <bean id="pooledEchoBean" class="org.jencks.TargetSourceMessageListener">
    <property name="targetSource">
      <bean id="pooledEchoBeanTargetSource" class="org.springframework.aop.target.CommonsPoolTargetSource">
        <property name="targetBeanName">
          <value>pooledEchoBeanTarget</value>
        </property>
        <property name="maxSize">
          <value>25</value>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="pooledEchoBeanTarget" class="org.jencks.TestBean" singleton="false">
  </bean>

</beans>

        <!-- END SNIPPET: spring -->
