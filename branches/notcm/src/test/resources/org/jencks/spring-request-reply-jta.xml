<?xml version="1.0" encoding="UTF-8"?>

<!-- START SNIPPET: spring -->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

  <!--
  || Transaction Manager
  -->

  <bean id="transactionManager" class="org.jencks.factory.TransactionManagerFactoryBean"/>

  <!--
  || ActiveMQ Broker
  -->
  <bean id="broker" class="org.apache.activemq.xbean.BrokerFactoryBean">
    <property name="config" value="classpath:org/jencks/broker.xml" />
  </bean>

  <!--
    || A JCA container
    -->
  <bean id="jencks" class="org.jencks.JCAContainer">
    <property name="transactionManager" ref="transactionManager"/>

    <!-- lets configure the thread pool and transaction manager -->
    <property name="threadPoolSize" value="25"/>

    <!-- the JCA Resource Adapter for ActiveMQ -->
    <property name="resourceAdapter" ref="jmsResourceAdapter" />
  </bean>
  
  <bean id="jmsResourceAdapter" class="org.apache.activemq.ra.ActiveMQResourceAdapter">
    <property name="serverUrl" value="tcp://localhost:51616"/>
  </bean>

  <bean id="connectionManager" class="org.jencks.factory.ConnectionManagerFactoryBean">
    <property name="transactionManager" ref="transactionManager"/>
    <property name="transaction" value="xa"/>
    <property name="pooling" value="true"/>
    <property name="allConnectionsEqual" value="true"/>
    <property name="poolMaxSize" value="2"/>
    <property name="poolMinSize" value="1"/>
    <property name="connectionMaxWaitMilliseconds" value="60"/>
    <property name="connectionMaxIdleMinutes" value="60"/>
  </bean>

  <!--
    || an inbound message connector using a stateful, pooled  MessageListener
    -->
  <bean id="requestResponseMEP" class="org.jencks.JCAConnector">

	<property name="jcaContainer" ref="jencks" />

    <!-- subscription details -->
    <property name="activationSpec">
      <bean class="org.apache.activemq.ra.ActiveMQActivationSpec">
        <property name="destination" value="org.jencks.JCAContainerRequestReplyUsingJtaTest"/>
        <property name="destinationType" value="javax.jms.Queue"/>
      </bean>
    </property>

    <!-- use XA transactions -->
    <property name="transactionManager" ref="transactionManager"/>

    <!-- This example uses a pooled bean -->
    <property name="ref" value="pooledReplyBean"/>
  </bean>

  <!-- a pooled, non-thread safe MessageListener using ProxyFactoryBean 
  <bean id="pooledReplyBean" class="org.jencks.TargetSourceMessageListener">
    <property name="targetSource" ref="pooledReplyBeanTx"/>
  </bean>-->
  <bean id="pooledReplyBean" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
  	<property name="transactionManager" ref="transactionManager"/>
  	<property name="target" ref="pooledReplyBeanTargetSource"/>
  	<property name="transactionAttributes">
      <props>
        <prop key="onMessage">PROPAGATION_REQUIRED</prop>
      </props>
    </property>
  </bean>
  <bean id="pooledReplyBeanTargetSource" class="org.springframework.aop.target.CommonsPoolTargetSource">
    <property name="targetBeanName" value="pooledReplyBeanTarget"/>
    <property name="maxSize" value="25"/>
  </bean>
  <bean id="pooledReplyBeanTarget" class="org.jencks.TestReplyBean" singleton="false">
    <property name="jmsTemplate" ref="jmsTemplate"/>
  </bean>



  <!--
  || A JmsTemplate used to publish from inside a JCA message consumption thread
  -->
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="jmsConnectionFactory" />
  </bean>
  
  <!--  Pooled XA connection factory
   -->
  <bean id="jmsManagedConnectionFactory" class="org.apache.activemq.ra.ActiveMQManagedConnectionFactory">
    <property name="resourceAdapter" ref="jmsResourceAdapter"/>
  </bean>

  <bean id="jmsConnectionFactory" class="org.springframework.jca.support.LocalConnectionFactoryBean">
    <property name="managedConnectionFactory" ref="jmsManagedConnectionFactory"/>
    <property name="connectionManager" ref="connectionManager"/>
  </bean>


</beans>

        <!-- END SNIPPET: spring -->
